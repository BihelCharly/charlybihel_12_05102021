{"version":3,"sources":["assets/logo.svg","components/Header.js","components/SimpleBarChart.js","components/TinyLineChart.js","components/SimpleRadarChart.js","pages/Home.js","pages/404.js","reportWebVitals.js","index.js","data/data.js"],"names":["Header","src","logo","className","alt","title","to","SimpleBarChart","newDataArray","Data","USER_ACTIVITY","sessions","forEach","element","index","newObject","name","kCal","calories","kg","kilogram","amt","push","BarChart","width","height","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","wrapperStyle","Legend","backgroundColor","borderRadius","lineHeight","display","flexDirection","justifyContent","Bar","fill","TinyLineChart","USER_AVERAGE_SESSIONS","day","sessionLength","console","log","LineChart","Line","type","stroke","dot","strokeWidth","subject","A","B","fullMark","SimpleRadarChart","RadarChart","outerRadius","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","fillOpacity","Home","USER_MAIN_DATA","userInfos","firstName","Error404","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Root","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","module","exports","id","lastName","age","todayScore","keyData","calorieCount","proteinCount","carbohydrateCount","lipidCount","score","userId","USER_PERFORMANCE","kind","1","2","3","4","5","6","value"],"mappings":"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","file":"static/js/main.232cc3d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c9828dd8.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../assets/logo.svg\";\nimport \"../styles/Header.scss\";\n\nfunction Header() {\n\treturn (\n\t\t<header>\n\t\t\t<img src={logo} className=\"Logo\" alt=\"SportSee\" title=\"Logo de SportSee\" />\n\t\t\t<nav>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><Link to={\"/\"} className=\"home\">Accueil</Link></li>\n\t\t\t\t\t<li>Profil</li>\n\t\t\t\t\t<li>Réglage</li>\n\t\t\t\t\t<li>Communauté</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport Data from \"../data/data\";\nimport \"../styles/SimpleBarChart.scss\";\n\nexport default function SimpleBarChart() {\n  let newDataArray = [];\n  let sessions = Data.USER_ACTIVITY[0].sessions;\n  sessions.forEach((element, index) => {\n    const newObject = {\n      name: index + 1,\n      kCal: element.calories,\n      kg: element.kilogram,\n      amt: element.kilogram,\n    };\n    newDataArray.push(newObject);\n  });\n\n  return (\n    <BarChart\n      width={835}\n      height={320}\n      data={newDataArray}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"0 5\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip\n        wrapperStyle={{\n          width: 100,\n        }}\n      />\n      <Legend\n        width={500}\n        wrapperStyle={{\n          top: 0,\n          right: 0,\n          backgroundColor: \"inherit\",\n          borderRadius: 3,\n          lineHeight: \"5px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"end\",\n        }}\n      />\n      <Bar name=\"Poids (kg)\" dataKey=\"kg\" fill=\"black\" />\n      <Bar name=\"Calories brûlées (kCal)\" dataKey=\"kCal\" fill=\"red\" />\n    </BarChart>\n  );\n}\n","import * as React from \"react\";\nimport { LineChart, Line, Legend, XAxis } from \"recharts\";\nimport Data from \"../data/data\";\nimport \"../styles/TinyLineChart.scss\";\n\nexport default function TinyLineChart() {\n  let newDataArray = [];\n  let sessions = Data.USER_AVERAGE_SESSIONS[0].sessions;\n  sessions.forEach((element, index) => {\n    let weekDays = [\"L\", \"M\", \"M\", \"J\", \"V\", \"S\", \"D\"];\n    const newObject = {\n      name: weekDays[index++],\n      day: element.day,\n      sessionLength: element.sessionLength,\n      amt: element.sessionLength,\n    };\n    newDataArray.push(newObject);\n  });\n  console.log(newDataArray);\n\n  return (\n    <LineChart\n      className=\"sessions-length\"\n      width={260}\n      height={270}\n      data={newDataArray}\n    >\n      <Legend\n        width={260}\n        wrapperStyle={{\n          top: -20,\n          right: 0,\n          backgroundColor: \"white\",\n          borderRadius: 3,\n          lineHeight: \"5px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"right\",\n        }}\n      />\n      <XAxis dataKey=\"name\" />\n      <Line\n        type=\"basis\"\n        dataKey=\"sessionLength\"\n        stroke=\"white\"\n        dot={false}\n        strokeWidth={3}\n        fill=\"white\"\n      />\n    </LineChart>\n  );\n}\n","import React from \"react\";\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n} from \"recharts\";\nimport \"../styles/SimpleRadarChart.scss\";\n\nconst data = [\n  {\n    subject: \"Math\",\n    A: 120,\n    B: 110,\n    fullMark: 150,\n  },\n  {\n    subject: \"Chinese\",\n    A: 98,\n    B: 130,\n    fullMark: 150,\n  },\n  {\n    subject: \"English\",\n    A: 86,\n    B: 130,\n    fullMark: 150,\n  },\n  {\n    subject: \"Geography\",\n    A: 99,\n    B: 100,\n    fullMark: 150,\n  },\n  {\n    subject: \"Physics\",\n    A: 85,\n    B: 90,\n    fullMark: 150,\n  },\n  {\n    subject: \"History\",\n    A: 65,\n    B: 85,\n    fullMark: 150,\n  },\n];\n\nexport default function SimpleRadarChart() {\n  return (\n    <RadarChart\n      className=\"sessions-performances\"\n      outerRadius={80}\n      width={260}\n      height={260}\n      data={data}\n    >\n      <PolarGrid />\n      <PolarAngleAxis dataKey=\"subject\" stroke=\"white\" />\n      <PolarRadiusAxis />\n      <Radar\n        name=\"Mike\"\n        dataKey=\"A\"\n        stroke=\"red\"\n        fill=\"red\"\n        fillOpacity={0.6}\n      />\n    </RadarChart>\n  );\n}\n","import React from \"react\";\nimport SimpleBarChart from \"../components/SimpleBarChart\";\nimport TinyLineChart from \"../components/TinyLineChart\";\nimport SimpleRadarChart from \"../components/SimpleRadarChart\";\nimport Data from \"../data/data\";\nimport \"../styles/Home.scss\";\n\nexport default function Home() {\n  return (\n    <>\n      <div className=\"welcome-block\">\n        <p className=\"welcome-user\">\n          Bonjour{\" \"}\n          <span className=\"user--name\">\n            {Data.USER_MAIN_DATA[0].userInfos.firstName}\n          </span>\n        </p>\n        <p className=\"welcome-goals\">\n          Félicitation ! Vous avez explosé vos objectifs hier 👏\n        </p>\n      </div>\n      <SimpleBarChart />\n      <TinyLineChart />\n      <SimpleRadarChart />\n    </>\n  );\n}\n","import React from \"react\";\n\nfunction Error404() {\n  return (\n    <div>\n      <p>404</p>\n    </div>\n  );\n}\n\nexport default Error404;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Home from \"./pages/Home\";\nimport Error404 from \"./pages/404\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.scss\";\n\nconst Root = () => (\n  <HashRouter basename=\"/\">\n    <Header />\n    <Switch>\n      <Route exact={true} path=\"/\" component={Home} />\n      <Route path=\"*\" component={Error404} />\n      <Route component={Error404} />\n    </Switch>\n  </HashRouter>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const USER_MAIN_DATA = [\n    {\n        id: 12,\n        userInfos: {\n            firstName: 'Karl',\n            lastName: 'Dovineau',\n            age: 31,\n        },\n        todayScore: 0.12,\n        keyData: {\n            calorieCount: 1930,\n            proteinCount: 155,\n            carbohydrateCount: 290,\n            lipidCount: 50\n        }\n    },\n    {\n        id: 18,\n        userInfos: {\n            firstName: 'Cecilia',\n            lastName: 'Ratorez',\n            age: 34,\n        },\n        score: 0.3,\n        keyData: {\n            calorieCount: 2500,\n            proteinCount: 90,\n            carbohydrateCount: 150,\n            lipidCount: 120\n        }\n    }\n]\n\nconst USER_ACTIVITY = [\n    {\n        userId: 12,\n        sessions: [\n            {\n                day: '2020-07-01',\n                kilogram: 80,\n                calories: 240\n            },\n            {\n                day: '2020-07-02',\n                kilogram: 80,\n                calories: 220\n            },\n            {\n                day: '2020-07-03',\n                kilogram: 81,\n                calories: 280\n            },\n            {\n                day: '2020-07-04',\n                kilogram: 81,\n                calories: 290\n            },\n            {\n                day: '2020-07-05',\n                kilogram: 80,\n                calories: 160\n            },\n            {\n                day: '2020-07-06',\n                kilogram: 78,\n                calories: 162\n            },\n            {\n                day: '2020-07-07',\n                kilogram: 76,\n                calories: 390\n            }\n        ]\n    },\n    {\n        userId: 18,\n        sessions: [\n            {\n                day: '2020-07-01',\n                kilogram: 70,\n                calories: 240\n            },\n            {\n                day: '2020-07-02',\n                kilogram: 69,\n                calories: 220\n            },\n            {\n                day: '2020-07-03',\n                kilogram: 70,\n                calories: 280\n            },\n            {\n                day: '2020-07-04',\n                kilogram: 70,\n                calories: 500\n            },\n            {\n                day: '2020-07-05',\n                kilogram: 69,\n                calories: 160\n            },\n            {\n                day: '2020-07-06',\n                kilogram: 69,\n                calories: 162\n            },\n            {\n                day: '2020-07-07',\n                kilogram: 69,\n                calories: 390\n            }\n        ]\n    }\n]\n\nconst USER_AVERAGE_SESSIONS = [\n    {\n        userId: 12,\n        sessions: [\n            {\n                day: 1,\n                sessionLength: 30\n            },\n            {\n                day: 2,\n                sessionLength: 23\n            },\n            {\n                day: 3,\n                sessionLength: 45\n            },\n            {\n                day: 4,\n                sessionLength: 50\n            },\n            {\n                day: 5,\n                sessionLength: 0\n            },\n            {\n                day: 6,\n                sessionLength: 0\n            },\n            {\n                day: 7,\n                sessionLength: 60\n            }\n        ]\n    },\n    {\n        userId: 18,\n        sessions: [\n            {\n                day: 1,\n                sessionLength: 30\n            },\n            {\n                day: 2,\n                sessionLength: 40\n            },\n            {\n                day: 3,\n                sessionLength: 50\n            },\n            {\n                day: 4,\n                sessionLength: 30\n            },\n            {\n                day: 5,\n                sessionLength: 30\n            },\n            {\n                day: 6,\n                sessionLength: 50\n            },\n            {\n                day: 7,\n                sessionLength: 50\n            }\n        ]\n    }\n]\n\nconst USER_PERFORMANCE = [\n    {\n        userId: 12,\n        kind: {\n            1: 'cardio',\n            2: 'energy',\n            3: 'endurance',\n            4: 'strength',\n            5: 'speed',\n            6: 'intensity'\n        },\n        data: [\n            {\n                value: 80,\n                kind: 1\n            },\n            {\n                value: 120,\n                kind: 2\n            },\n            {\n                value: 140,\n                kind: 3\n            },\n            {\n                value: 50,\n                kind: 4\n            },\n            {\n                value: 200,\n                kind: 5\n            },\n            {\n                value: 90,\n                kind: 6\n            }\n        ]\n    },\n    {\n        userId: 18,\n        kind: {\n            1: 'cardio',\n            2: 'energy',\n            3: 'endurance',\n            4: 'strength',\n            5: 'speed',\n            6: 'intensity'\n        },\n        data: [\n            {\n                value: 200,\n                kind: 1\n            },\n            {\n                value: 240,\n                kind: 2\n            },\n            {\n                value: 80,\n                kind: 3\n            },\n            {\n                value: 80,\n                kind: 4\n            },\n            {\n                value: 220,\n                kind: 5\n            },\n            {\n                value: 110,\n                kind: 6\n            }\n        ]\n    }\n]\n\nmodule.exports = {\n    USER_MAIN_DATA,\n    USER_ACTIVITY,\n    USER_AVERAGE_SESSIONS,\n    USER_PERFORMANCE\n}"],"sourceRoot":""}