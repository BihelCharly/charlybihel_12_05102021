{"version":3,"sources":["data/data.js","assets/logo.svg","components/Header.js","assets/yoga.svg","assets/swim.svg","assets/cycle.svg","assets/gym.svg","components/NavLeft.js","components/SimpleBarChart.js","components/TinyLineChart.js","components/SimpleRadarChart.js","components/CustomPie.js","assets/calories-icon.svg","assets/protein-icon.svg","assets/carbs-icon.svg","assets/fat-icon.svg","components/Nutrition.js","pages/Home.js","pages/404.js","reportWebVitals.js","index.js"],"names":["module","exports","USER_MAIN_DATA","id","userInfos","firstName","lastName","age","todayScore","keyData","calorieCount","proteinCount","carbohydrateCount","lipidCount","score","USER_ACTIVITY","userId","sessions","day","kilogram","calories","USER_AVERAGE_SESSIONS","sessionLength","USER_PERFORMANCE","kind","1","2","3","4","5","6","data","value","Header","src","logo","className","alt","title","to","NavLeft","logoYoga","logoSwim","logoCycle","logoGym","SimpleBarChart","newDataArray","Data","forEach","element","index","newObject","name","kCal","kg","push","BarChart","width","height","barGap","barSize","margin","top","right","left","bottom","x","y","fill","fontSize","CartesianGrid","strokeDasharray","vertical","stroke","XAxis","allowDataOverflow","dataKey","tickSize","tickMargin","scale","padding","YAxis","axisLine","orientation","type","domain","interval","Tooltip","content","active","payload","length","Legend","align","verticalAlign","iconType","iconSize","formatter","entry","style","color","Bar","radius","TinyLineChart","weekDays","amt","LineChart","opacity","tickLine","tick","cursor","strokeWidth","label","Line","dot","SimpleRadarChart","performances","activity","Object","values","fullMark","RadarChart","outerRadius","cx","cy","PolarGrid","radialLines","PolarAngleAxis","PolarRadiusAxis","Radar","fillOpacity","CustomPie","colors","CustomLabel","viewBox","value1","value2","textAnchor","dominantBaseline","alignmentBaseline","PieChart","Pie","innerRadius","startAngle","endAngle","paddingAngle","Label","position","map","Cell","Nutrition","entries","newNameArray","newLogoArray","logoCal","logoProt","logoCarb","logoFat","Home","Error404","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Root","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eeb15304.chunk.js","sourcesContent":["const USER_MAIN_DATA = [\n  {\n    id: 12,\n    userInfos: {\n      firstName: \"Karl\",\n      lastName: \"Dovineau\",\n      age: 31,\n    },\n    todayScore: 0.12,\n    keyData: {\n      calorieCount: 1930,\n      proteinCount: 155,\n      carbohydrateCount: 290,\n      lipidCount: 50,\n    },\n  },\n  {\n    id: 18,\n    userInfos: {\n      firstName: \"Cecilia\",\n      lastName: \"Ratorez\",\n      age: 34,\n    },\n    score: 0.3,\n    keyData: {\n      calorieCount: 2500,\n      proteinCount: 90,\n      carbohydrateCount: 150,\n      lipidCount: 120,\n    },\n  },\n];\n\nconst USER_ACTIVITY = [\n  {\n    userId: 12,\n    sessions: [\n      {\n        day: \"2020-07-01\",\n        kilogram: 80,\n        calories: 240,\n      },\n      {\n        day: \"2020-07-02\",\n        kilogram: 80,\n        calories: 220,\n      },\n      {\n        day: \"2020-07-03\",\n        kilogram: 81,\n        calories: 280,\n      },\n      {\n        day: \"2020-07-04\",\n        kilogram: 81,\n        calories: 290,\n      },\n      {\n        day: \"2020-07-05\",\n        kilogram: 80,\n        calories: 160,\n      },\n      {\n        day: \"2020-07-06\",\n        kilogram: 78,\n        calories: 162,\n      },\n      {\n        day: \"2020-07-07\",\n        kilogram: 76,\n        calories: 390,\n      },\n    ],\n  },\n  {\n    userId: 18,\n    sessions: [\n      {\n        day: \"2020-07-01\",\n        kilogram: 70,\n        calories: 240,\n      },\n      {\n        day: \"2020-07-02\",\n        kilogram: 69,\n        calories: 220,\n      },\n      {\n        day: \"2020-07-03\",\n        kilogram: 70,\n        calories: 280,\n      },\n      {\n        day: \"2020-07-04\",\n        kilogram: 70,\n        calories: 500,\n      },\n      {\n        day: \"2020-07-05\",\n        kilogram: 69,\n        calories: 160,\n      },\n      {\n        day: \"2020-07-06\",\n        kilogram: 69,\n        calories: 162,\n      },\n      {\n        day: \"2020-07-07\",\n        kilogram: 69,\n        calories: 390,\n      },\n    ],\n  },\n];\n\nconst USER_AVERAGE_SESSIONS = [\n  {\n    userId: 12,\n    sessions: [\n      {\n        day: 1,\n        sessionLength: 30,\n      },\n      {\n        day: 2,\n        sessionLength: 23,\n      },\n      {\n        day: 3,\n        sessionLength: 45,\n      },\n      {\n        day: 4,\n        sessionLength: 50,\n      },\n      {\n        day: 5,\n        sessionLength: 0,\n      },\n      {\n        day: 6,\n        sessionLength: 0,\n      },\n      {\n        day: 7,\n        sessionLength: 60,\n      },\n    ],\n  },\n  {\n    userId: 18,\n    sessions: [\n      {\n        day: 1,\n        sessionLength: 30,\n      },\n      {\n        day: 2,\n        sessionLength: 40,\n      },\n      {\n        day: 3,\n        sessionLength: 50,\n      },\n      {\n        day: 4,\n        sessionLength: 30,\n      },\n      {\n        day: 5,\n        sessionLength: 30,\n      },\n      {\n        day: 6,\n        sessionLength: 50,\n      },\n      {\n        day: 7,\n        sessionLength: 50,\n      },\n    ],\n  },\n];\n\nconst USER_PERFORMANCE = [\n  {\n    userId: 12,\n    kind: {\n      1: \"cardio\",\n      2: \"energy\",\n      3: \"endurance\",\n      4: \"strength\",\n      5: \"speed\",\n      6: \"intensity\",\n    },\n    data: [\n      {\n        value: 80,\n        kind: 1,\n      },\n      {\n        value: 120,\n        kind: 2,\n      },\n      {\n        value: 140,\n        kind: 3,\n      },\n      {\n        value: 50,\n        kind: 4,\n      },\n      {\n        value: 200,\n        kind: 5,\n      },\n      {\n        value: 90,\n        kind: 6,\n      },\n    ],\n  },\n  {\n    userId: 18,\n    kind: {\n      1: \"cardio\",\n      2: \"energy\",\n      3: \"endurance\",\n      4: \"strength\",\n      5: \"speed\",\n      6: \"intensity\",\n    },\n    data: [\n      {\n        value: 200,\n        kind: 1,\n      },\n      {\n        value: 240,\n        kind: 2,\n      },\n      {\n        value: 80,\n        kind: 3,\n      },\n      {\n        value: 80,\n        kind: 4,\n      },\n      {\n        value: 220,\n        kind: 5,\n      },\n      {\n        value: 110,\n        kind: 6,\n      },\n    ],\n  },\n];\n\nmodule.exports = {\n  USER_MAIN_DATA,\n  USER_ACTIVITY,\n  USER_AVERAGE_SESSIONS,\n  USER_PERFORMANCE,\n};\n","export default __webpack_public_path__ + \"static/media/logo.c9828dd8.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../assets/logo.svg\";\nimport \"../styles/Header.scss\";\n\nfunction Header() {\n\treturn (\n\t\t<header>\n\t\t\t<img src={logo} className=\"Logo\" alt=\"SportSee\" title=\"Logo de SportSee\" />\n\t\t\t<nav>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><Link to={\"/\"} className=\"home\">Accueil</Link></li>\n\t\t\t\t\t<li>Profil</li>\n\t\t\t\t\t<li>Réglage</li>\n\t\t\t\t\t<li>Communauté</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/yoga.6c31a277.svg\";","export default __webpack_public_path__ + \"static/media/swim.e26dba43.svg\";","export default __webpack_public_path__ + \"static/media/cycle.d516c0e8.svg\";","export default __webpack_public_path__ + \"static/media/gym.4fe7fb9f.svg\";","import React from \"react\";\nimport \"../styles/NavLeft.scss\";\nimport logoYoga from \"../assets/yoga.svg\";\nimport logoSwim from \"../assets/swim.svg\";\nimport logoCycle from \"../assets/cycle.svg\";\nimport logoGym from \"../assets/gym.svg\";\n\nexport default function NavLeft() {\n  return (\n    <aside className=\"nav-left\">\n      <ul>\n        <li>\n          <img\n            src={logoYoga}\n            className=\"logo--yoga nav-logo\"\n            alt=\"Yoga\"\n            title=\"Logo Yoga\"\n          />\n        </li>\n        <li>\n          {\" \"}\n          <img\n            src={logoSwim}\n            className=\"logo--Swim nav-logo\"\n            alt=\"Swim\"\n            title=\"Logo Swim\"\n          />\n        </li>\n        <li>\n          {\" \"}\n          <img\n            src={logoCycle}\n            className=\"logo--Cycle nav-logo\"\n            alt=\"Cycle\"\n            title=\"Logo de Cycle\"\n          />\n        </li>\n        <li>\n          {\" \"}\n          <img\n            src={logoGym}\n            className=\"logo--Gym nav-logo\"\n            alt=\"Gym\"\n            title=\"Logo de Gym\"\n          />\n        </li>\n      </ul>\n      <div className=\"copiryght\">\n        <p>Copiryght, SportSee 2020</p>\n      </div>\n    </aside>\n  );\n}\n","import React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport Data from \"../data/data\";\nimport \"../styles/SimpleBarChart.scss\";\n\nexport default function SimpleBarChart() {\n  let newDataArray = [];\n  let sessions = Data.USER_ACTIVITY[0].sessions;\n  sessions.forEach((element, index) => {\n    const newObject = {\n      name: index + 1,\n      kCal: element.calories,\n      kg: element.kilogram,\n    };\n    newDataArray.push(newObject);\n  });\n\n  const newLegend = (entry) => {\n    const color = \"#74798C\";\n    return <span style={{ color }}>{entry}</span>;\n  };\n\n  const CustomTooltip = ({ active, payload }: any) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"barchart-tooltip\">\n          <p className=\"label\">{`${payload[1].value}kg`}</p>\n          <p className=\"label\">{`${payload[0].value}kCal`}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <BarChart\n      width={835}\n      height={320}\n      barGap={-30}\n      barSize={9}\n      data={newDataArray}\n      margin={{\n        top: 15,\n        right: 30,\n        left: 25,\n        bottom: 35,\n      }}\n    >\n      <text x={20} y={30} fill=\"black\" fontSize=\"15\">\n        {\"Activité quotidienne\"}\n      </text>\n      <CartesianGrid strokeDasharray=\"3 3\" vertical={false} stroke=\"#DEDEDE\" />\n      <XAxis\n        allowDataOverflow={true}\n        dataKey=\"name\"\n        tickSize=\"0\"\n        tickMargin=\"30\"\n        stroke=\"#9B9EAC\"\n        scale=\"point\"\n        padding={{ left: 17, right: 16 }}\n      />\n      <YAxis\n        padding={{ top: 60, bottom: 0 }}\n        axisLine={false}\n        dataKey=\"kg\"\n        orientation=\"right\"\n        tickSize=\"\"\n        tickMargin=\"25\"\n        stroke=\"#9B9EAC\"\n        type=\"number\"\n        domain={[\"dataMin\", \"dataMax\"]}\n        interval={0}\n      />\n      <Tooltip content={CustomTooltip} />\n      <Legend\n        align=\"right\"\n        verticalAlign=\"top\"\n        iconType=\"circle\"\n        iconSize={8}\n        formatter={newLegend}\n      />\n      <Bar\n        name=\"Calories brûlées (kCal)\"\n        dataKey=\"kCal\"\n        fill=\"red\"\n        radius={[10, 10, 0, 0]}\n      />\n      <Bar\n        name=\"Poids (kg)\"\n        dataKey=\"kg\"\n        fill=\"black\"\n        radius={[10, 10, 0, 0]}\n      />\n    </BarChart>\n  );\n}\n","import * as React from \"react\";\nimport { LineChart, Line, Legend, XAxis, Tooltip } from \"recharts\";\nimport Data from \"../data/data\";\nimport \"../styles/TinyLineChart.scss\";\n\nexport default function TinyLineChart() {\n  let weekDays = [\"L\", \"M\", \"M\", \"J\", \"V\", \"S\", \"D\"];\n  let newDataArray = [];\n  let sessions = Data.USER_AVERAGE_SESSIONS[0].sessions;\n  sessions.forEach((element, index) => {\n    const newObject = {\n      name: weekDays[index++],\n      day: element.day,\n      sessionLength: element.sessionLength,\n      amt: element.sessionLength,\n    };\n    newDataArray.push(newObject);\n  });\n\n  const newLegend = () => {\n    const color = \"white\";\n    const opacity = \"60%\";\n    return <span style={{ color, opacity }}>Durée moyenne des sessions</span>;\n  };\n\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"linechart-tooltip\">\n          <p className=\"label\">{`${payload[0].value} mn`}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <LineChart\n      className=\"sessions-length\"\n      width={260}\n      height={270}\n      data={newDataArray}\n      margin={{\n        top: 50,\n        right: 20,\n        left: 20,\n        bottom: 58,\n      }}\n      interval=\"preserveStartEnd\"\n    >\n      <Legend\n        height={70}\n        width={200}\n        align=\"left\"\n        verticalAlign=\"top\"\n        iconSize=\"0\"\n        margin=\"0\"\n        formatter={newLegend}\n      />\n      <XAxis\n        axisLine={false}\n        tickLine={false}\n        dataKey=\"name\"\n        stroke=\"white\"\n        tickMargin=\"50\"\n        tick={{ opacity: 0.6 }}\n        allowDataOverflow={true}\n      />\n      <Tooltip\n        cursor={{ stroke: \"red\", strokeWidth: 0 }}\n        content={CustomTooltip}\n      />\n      <Line\n        type=\"natural\"\n        dataKey=\"sessionLength\"\n        stroke=\"white\"\n        dot={false}\n        strokeWidth={2}\n        fill=\"white\"\n      />\n    </LineChart>\n  );\n}\n","import React from \"react\";\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n} from \"recharts\";\nimport Data from \"../data/data\";\nimport \"../styles/SimpleRadarChart.scss\";\n\nexport default function SimpleRadarChart() {\n  let newDataArray = [];\n  let performances = Data.USER_PERFORMANCE[0].data;\n  let kind = Data.USER_PERFORMANCE[0].kind;\n  performances.forEach((element, index) => {\n    let activities = Object.values(kind);\n    const newObject = {\n      activity: activities[index++],\n      kind: element.value,\n      fullMark: 150,\n    };\n    newDataArray.push(newObject);\n  });\n\n  return (\n    <RadarChart\n      className=\"sessions-performances\"\n      outerRadius={85}\n      width={260}\n      height={270}\n      data={newDataArray}\n      cx=\"50%\"\n      cy=\"50%\"\n    >\n      <PolarGrid stroke=\"white\" radialLines={false} />\n      <PolarAngleAxis\n        dataKey=\"activity\"\n        stroke=\"white\"\n        fontSize=\"10\"\n        tickLine={false}\n      />\n      <PolarRadiusAxis tick={false} axisLine={false} />\n      <Radar dataKey=\"kind\" stroke=\"red\" fill=\"red\" fillOpacity={0.65} />\n    </RadarChart>\n  );\n}\n","import React from \"react\";\nimport { PieChart, Pie, Cell, Legend, Label } from \"recharts\";\nimport Data from \"../data/data\";\nimport \"../styles/CustomPie.scss\";\n\nexport default function CustomPie() {\n  let score = Data.USER_MAIN_DATA[0].todayScore * 100;\n\n  const data = [\n    { name: \"Score\", value: score },\n    { name: \"Total\", value: 100 - score },\n  ];\n  const colors = [\"red\", \"transparent\"];\n\n  const renderLegend = () => {\n    return <p className=\"piechart-legend\">{data[0].name}</p>;\n  };\n\n  function CustomLabel({ viewBox, value1, value2 }) {\n    const { cx, cy } = viewBox;\n    return (\n      <>\n        <text\n          x={cx}\n          y={cy - 5}\n          fill=\"black\"\n          className=\"recharts-text recharts-label\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"central\"\n        >\n          <tspan alignmentBaseline=\"middle\" fontSize=\"35px\">\n            {value1}\n          </tspan>\n        </text>\n        <text\n          x={cx}\n          y={cy + 20}\n          fill=\"#74798C\"\n          className=\"recharts-text recharts-label\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"central\"\n        >\n          <tspan fontSize=\"12.3px\">{value2}</tspan>\n        </text>\n      </>\n    );\n  }\n\n  return (\n    <PieChart width={260} height={270}>\n      <Legend align=\"left\" verticalAlign=\"top\" content={renderLegend} />\n      <Pie\n        data={data}\n        cx=\"50%\"\n        cy=\"40%\"\n        innerRadius={90}\n        outerRadius={105}\n        startAngle={90}\n        endAngle={450}\n        paddingAngle={0}\n        dataKey=\"value\"\n        label={false}\n      >\n        <Label\n          position=\"center\"\n          content={\n            <CustomLabel\n              value1={data[0].value + \"%\"}\n              value2=\"de votre objectif\"\n            />\n          }\n        ></Label>\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/calories-icon.5db5a3af.svg\";","export default __webpack_public_path__ + \"static/media/protein-icon.c2859796.svg\";","export default __webpack_public_path__ + \"static/media/carbs-icon.aa0e7466.svg\";","export default __webpack_public_path__ + \"static/media/fat-icon.82c6cb9f.svg\";","import React from \"react\";\nimport Data from \"../data/data\";\nimport logoCal from \"../assets/calories-icon.svg\";\nimport logoProt from \"../assets/protein-icon.svg\";\nimport logoCarb from \"../assets/carbs-icon.svg\";\nimport logoFat from \"../assets/fat-icon.svg\";\nimport \"../styles/Nutrition.scss\";\n\nexport default function Nutrition() {\n  const keyData = Object.entries(Data.USER_MAIN_DATA[0].keyData);\n  const newDataArray = [];\n  const newNameArray = [\"Calories\", \"Proteines\", \"Glucides\", \"Lipides\"];\n  const newLogoArray = [\"\", logoCal, logoProt, logoCarb, logoFat];\n\n  keyData.forEach((element, index) => {\n    const newObject = {\n      name: newNameArray[index++],\n      value: element[1],\n      logo: newLogoArray[index++],\n    };\n    newDataArray.push(newObject);\n  });\n\n  return (\n    <div className=\"nutrition-block\">\n      {newDataArray.map((element) => (\n        <div className=\"calories\">\n          <img\n            src={element.logo}\n            alt={element.name}\n            title={\"Logo \" + element.name}\n          />\n          <p>{element.value + \"kCal\"}</p>\n          <p>{element.name}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport SimpleBarChart from \"../components/SimpleBarChart\";\nimport TinyLineChart from \"../components/TinyLineChart\";\nimport SimpleRadarChart from \"../components/SimpleRadarChart\";\nimport CustomPie from \"../components/CustomPie\";\nimport Nutrition from \"../components/Nutrition\";\nimport Data from \"../data/data\";\nimport \"../styles/Home.scss\";\n\nexport default function Home() {\n  return (\n    <main className=\"dashboard\">\n      <div className=\"welcome-block\">\n        <p className=\"welcome-user\">\n          Bonjour{\" \"}\n          <span className=\"user--name\">\n            {Data.USER_MAIN_DATA[0].userInfos.firstName}\n          </span>\n        </p>\n        <p className=\"welcome-goals\">\n          Félicitation ! Vous avez explosé vos objectifs hier 👏\n        </p>\n      </div>\n      <div className=\"charts-block\">\n        <SimpleBarChart />\n        <TinyLineChart />\n        <SimpleRadarChart />\n        <CustomPie />\n        <Nutrition />\n      </div>\n    </main>\n  );\n}\n","import React from \"react\";\n\nfunction Error404() {\n  return (\n    <div>\n      <p>404</p>\n    </div>\n  );\n}\n\nexport default Error404;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport NavLeft from \"./components/NavLeft\";\nimport Home from \"./pages/Home\";\nimport Error404 from \"./pages/404\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.scss\";\n\nconst Root = () => (\n  <HashRouter basename=\"/\">\n    <Header />\n    <NavLeft />\n    <Switch>\n      <Route exact={true} path=\"/\" component={Home} />\n      <Route path=\"*\" component={Error404} />\n      <Route component={Error404} />\n    </Switch>\n  </HashRouter>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}